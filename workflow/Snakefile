import pandas as pd
import numpy as np
import os
import re

configfile: "config/config.yml"

## Chromosome names
chrs = '1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 X Y'
chrnum = ['chr' + ii for ii in chrs.split()]
annotationbase = "gencode.v45.primary_assembly.annotation"
graphbase = "hprc-v1.1-mc-grch38"

## Load samples & set all columns to strings
df = pd.read_table(config['samples'])

## Check there are accessions
n = len(df.Run)
assert (n > 0), "No accessions were specified. Please add at least one SRA ID"

## Define key values
accessions = df.Run

## Constrain wildcards
wildcard_constraints:
	accession = "(" + '|'.join(accessions) + ")",

# All subsequent paths
gfa_path = ("/hpcfs/users/a1627307/genome/hprc-v1.1-mc-grch38.gfa")
gfa_full_path = ("/hpcfs/users/a1627307/genome/hprc-v1.1-mc-grch38.full.gfa")
gbz_path = ("/hpcfs/users/a1627307/genome/hprc-v1.1-mc-grch38.gbz")
gtf_path = ("/hpcfs/users/a1627307/genome/gencode.v45.primary_assembly.annotation.gtf")
# trim_path = os.path.join("hpcfs", "users", "a1627307", 
# 						"star_t2d", "star_t2d", "data", "fastq", "trimmed")
log_path = os.path.join("workflow", "logs")
graph_outpath  = os.path.join("data", "graph")
annotation_outpath = os.path.join("data", "annotation")
index_outpath = os.path.join("data", "index")
gtf_rn = os.path.join(
            annotation_outpath, "gencode.v45.primary_assembly.annotation_renamed.gtf")
# mpmap_outpath = os.path.join("data", "mpmap")
# mpmaplog_path = os.path.join("output", "mpmap")

ALL_INDEX = expand(
	os.path.join(index_outpath, "{base}_autoindex_spliced.{suffix}"),
	base = ['chr22'],
	suffix = ['gcsa', 'xg', 'dist'])

# ALL_INDEXLOGS = expand(

# )

# ALL_CONVERT = expand(
# 	os.path.join(graph_outpath, graphbase + ".{suffix}"),
# 	suffix = ['pg']
# )
ALL_CONVERT = expand(
	os.path.join(graph_outpath, "{base}.{suffix}"),
	base = ['chr22'],
	suffix = ['pg']
)

ALL_CONSTRUCT = expand(
	os.path.join(graph_outpath, "chr22-spliced.{suffix}"),
	suffix = ['pg']
)

# ALL_TRANSFORM = expand(
# 	os.path.join(annotation_outpath, "{chrnum}." + annotationbase + "_renamed.gtf"),
# 	chrnum = chrnum
# )

ALL_SPLIT_GTF = expand(
	os.path.join(
            annotation_outpath, "{chrnum}." + annotationbase + ".gtf"),
	chrnum = chrnum
)

ALL_XG = expand(
	os.path.join(
			index_outpath, "{base}-spliced.{suffix}"),
	base = ['chr22'],
	suffix = ['xg']		
)

ALL_OUTPUTS = []
ALL_OUTPUTS.extend(ALL_INDEX)
ALL_OUTPUTS.extend(ALL_CONVERT)
ALL_OUTPUTS.extend(ALL_CONSTRUCT)
# ALL_OUTPUTS.extend(ALL_TRANSFORM)
ALL_OUTPUTS.extend(ALL_SPLIT_GTF)
ALL_OUTPUTS.extend(ALL_XG)

rule all:
	input:
		ALL_OUTPUTS

include: "rules/autoindex.smk"
include: "rules/convert.smk"
include: "rules/construct.smk"
# include: "rules/transform_gtf.smk"
include: "rules/subset.smk"
include: "rules/xg_index.smk"
